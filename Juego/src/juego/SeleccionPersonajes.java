/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juego;

import control.Controlador;
import java.awt.DisplayMode;
import java.awt.Label;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Ray
 */
public class SeleccionPersonajes extends javax.swing.JDialog {
    private Controlador controlSelecPer;
    /**
     * Creates new form SeleccionPersonajes
     */
    public SeleccionPersonajes(JDialog parent, boolean modal, Controlador elControl) {
        super(parent, modal);
        controlSelecPer = elControl;
        //for
        
        initComponents();
        //preguta si hay jugadores sufientes y si no los crea
        
        
        /*if(controlSelecPer.getNombresJugadores().size() == 0){
            controlSelecPer.agregarJugador("Jugador 1", "Jugador 1", " ", 0);
            controlSelecPer.agregarJugador("Jugador 2", "Jugador 2", " ", 0);
        }else if(controlSelecPer.getNombresJugadores().size() == 1){
            controlSelecPer.agregarJugador("Jugador 2", "Jugador 2", " ", 0);
        }*/
        
        refrecarTextField(0);
        refrecarTextField(1);
        //esto se maneja con los dos primeros jugadores creados
        if(controlSelecPer.getPersoanjesSize()>0){
            int locationY = 40;
            String nombrePersonaje;
            for (int i = 0; i < controlSelecPer.getPersoanjesSize(); i++) {
                //crea un label con el nombre del pj
                nombrePersonaje=controlSelecPer.getPersonajeNombre(i);
                crearLabel(nombrePersonaje,0,locationY);
                //crea los botones
                //System.out.println(controlSelecPer.getPersonajeNombre(i));
                crearBoton("minus.png",100,locationY).addActionListener( new Disminuir(nombrePersonaje, controlSelecPer, 0, this , (Jugar)parent));
                crearBoton("plus.png",140,locationY).addActionListener( new Aumentar(nombrePersonaje, controlSelecPer, 0, this , (Jugar)parent));
                locationY+=40;
                
            }
            
            locationY = 40;
            for (int i = 0; i < controlSelecPer.getPersoanjesSize(); i++) {
                
                nombrePersonaje=controlSelecPer.getPersonajeNombre(i);
                crearLabel(controlSelecPer.getPersonajeNombre(i),480,locationY);
                //crea los botones
                crearBoton("minus.png",580,locationY).addActionListener( new Disminuir(nombrePersonaje, controlSelecPer, 1, this,(Jugar)parent));
                crearBoton("plus.png",620,locationY).addActionListener( new Aumentar(nombrePersonaje, controlSelecPer, 1, this,(Jugar)parent));
                locationY+=40;
            }
        }
        
        
    }

    private SeleccionPersonajes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Jugador 1");

        jLabel2.setText("Jugador 2");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(399, 399, 399)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(224, 224, 224)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(593, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(249, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(255, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1043, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 653, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    public JLabel crearLabel(String Text , int locationX ,int locationY){
        JLabel newLabel = new JLabel(Text); ;
        newLabel.setBackground(new java.awt.Color(255, 153, 0));
        newLabel.setFont(new java.awt.Font("Tahoma", 0, 16));
        newLabel.setSize(100, 40);
        newLabel.setLocation(locationX,locationY);
        jPanel1.add(newLabel); 
        
        return newLabel;
    }
    
    public JButton crearBoton(String ImageName,int locationX ,int locationY){
        JButton retornado=new JButton("");
        retornado.setBackground(new java.awt.Color(240,240,240));
        retornado.setIcon(new ImageIcon("src/imagenes/"+ImageName));
        retornado.setFont(new java.awt.Font("Arial", 0, 6));
        retornado.setSize(30, 30);
        retornado.setOpaque(true);
        jPanel1.add(retornado);
        retornado.setLocation(locationX, locationY);
        return retornado;
    }
    public void refrecarTextField(int indexPlayer){
        
        if(indexPlayer == 0){
            jTextArea2.setText(controlSelecPer.consultarPersonajesJugador(0));
            //System.out.println(controlSelecPer.consultarPersonajesJugador(0));
        }else if (indexPlayer == 1){
            jTextArea1.setText(controlSelecPer.consultarPersonajesJugador(1));
        }
    
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeleccionPersonajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeleccionPersonajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeleccionPersonajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeleccionPersonajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SeleccionPersonajes dialog = new SeleccionPersonajes(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}

class Disminuir implements ActionListener {
    private String personajeNombre;//este indice indica donde se borra el personaje
    private Controlador controlAumentar;
    private int indexJugador;
    private SeleccionPersonajes pantallaSeleccionPJ;
    private Jugar pantallaJugar;

    public Disminuir(String personajeNombre, Controlador controlAumentar, int indexJugador, SeleccionPersonajes pantallaSeleccionPJ, Jugar pantallaJugar) {
        this.personajeNombre = personajeNombre;
        this.controlAumentar = controlAumentar;
        this.indexJugador = indexJugador;
        this.pantallaSeleccionPJ = pantallaSeleccionPJ;
        this.pantallaJugar = pantallaJugar;
    }

	@Override
	public void actionPerformed(java.awt.event.ActionEvent e) {
            controlAumentar.eliminarPerJugador(indexJugador,personajeNombre);
            pantallaSeleccionPJ.refrecarTextField(indexJugador);
            pantallaJugar.changeComboBoxPJ(indexJugador);
	}
}
class Aumentar implements ActionListener {
    private String personajeNombre;//este indice indica donde se crea el personaje
    private Controlador controlAumentar;
    private int indexJugador;
    private SeleccionPersonajes pantallaSeleccionPJ;
    private Jugar pantallaJugar;

    public Aumentar(String personajeNombre, Controlador controlAumentar, int indexJugador,
            SeleccionPersonajes pantallaSeleccionPJ, Jugar pantallaJugar) {
        this.personajeNombre = personajeNombre;
        this.controlAumentar = controlAumentar;
        this.indexJugador = indexJugador;
        this.pantallaSeleccionPJ = pantallaSeleccionPJ;
        this.pantallaJugar = pantallaJugar;
    }

    
    
	@Override
	public void actionPerformed(java.awt.event.ActionEvent e) {
            if( controlAumentar.getJugarPersonajesSize(indexJugador) < 4 ){
                controlAumentar.agregarPerJugador(indexJugador,personajeNombre);
                //refresca los personajes que tiene el jugador
                pantallaSeleccionPJ.refrecarTextField(indexJugador);
                pantallaJugar.changeComboBoxPJ(indexJugador);
            }else{
                JOptionPane.showMessageDialog(null, "No se puede tener mas de 4 Personajes por jugador", "Campos llenos", JOptionPane.OK_OPTION);
            }
        }
}

